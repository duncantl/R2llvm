# For now export everything.
#exportPattern(".*")

useDynLib(R2llvm)

import(Rllvm)
import(methods)
import(CodeAnalysis)
importFrom(codetools, findGlobals)
#import(typesys)
import(RTypeInference)
import(rstatic)

export(compileFunction) #, compile)
export(getCompilerHandlers)

export(compile)
export(compile.call)
# Need to export the compile methods to make things work.
# Otherwise, we get an error about compile.call not found.
S3method(compile,default)
S3method(compile,"if")
S3method(compile,integer)
S3method(compile,numeric)
S3method(compile,logical)
S3method(compile,name)
S3method(compile,Value)
S3method(compile,"{")

export(insertReturn)
S3method(insertReturn, "function")

export(vectorizeFunction)

export(createProxy)


export(compileGPUKernel, DefaultGPULayout, ModuleForNVVM, setGPUKernel)
export(fixPTXCodeForNVVM )

export(getBuiltInRoutines)


export(fixIfAssign)
S3method("fixIfAssign", "for")
S3method("fixIfAssign", "=")
S3method("fixIfAssign", "<-")
S3method("fixIfAssign", "{")
S3method("fixIfAssign", "call")
S3method("fixIfAssign", "function")
S3method("fixIfAssign", "if")
S3method("fixIfAssign", "next")
S3method("fixIfAssign", "continue")
S3method("fixIfAssign", "name")
S3method("fixIfAssign", "while")
S3method("fixIfAssign", "numeric")
S3method("fixIfAssign", "logical")
S3method("fixIfAssign", "character")


export(RMatrixType, DataFrameType, NativeMatrixType)

export(traverseExpressions, rewriteRNGCalls)


export(STRSXP, LGLSXP, REALSXP, INTSXP, CPLXSXP, ANYSXP, CHARSXP, LANGSXP, SYMSXP, VECSXP, S4SXP, RAWSXP, EXPTRSXP, EXPRSXP, ENVSXP)


export(loadRObjectFromString)


export(BasicCompiler)



export(getSymbolInfoMetadata)

export(vectorizeScalarFunction)


#export(mkCompiler)
export(compiler)


export(setVarType)



export(translate_type)
S3method(translate_type, "typesys::IntegerType")
S3method(translate_type, "typesys::RealType")
S3method(translate_type, "typesys::ListType")
S3method(translate_type, "typesys::BooleanType")
S3method(translate_type, "typesys::ArrayType")
S3method(translate_type, "typesys::StringType")

export(construct_ir)
S3method(construct_ir, "Assign")
S3method(construct_ir, "Call")
S3method(construct_ir, "Integer")
S3method(construct_ir, "Numeric")
S3method(construct_ir, "RetTerminator")
S3method(construct_ir, "BrTerminator")
S3method(construct_ir, "Replacement")
S3method(construct_ir, "Replacement")
S3method(construct_ir, "Phi")
S3method(construct_ir, "Symbol")


exportMethods("coerce")
